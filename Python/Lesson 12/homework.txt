Розробити функцію для конвертування найбільш поширених записів дат у формат ISO

ISO YYYY-MM-DD 2022-08-11

Найбільш поширені формати
рррр. ММ. дд	2006. 05. 04	Угорщина
рррр-ММ-дд	2006-05-04	Польща, Швеція, Литва, Канада
рррр/ММ/дд	2006/05/04	Іран, Японія
рррр-М-д	2006-5-4	КНР
рррр/М/д	2006/5/4	Гонконг, Тайвань
д.М.рррр	4.5.2006	Фінляндія, Чехія
д-М-рррр	4-5-2006	Нідерланди
д/М/рррр	4/5/2006	Бразилія, Греція, Таїланд
дд.мм.рррр	04.05.2006	Болгарія, Німеччина, Норвегія, Румунія, Росія, Туреччина, Україна
дд-ММ-рррр	04-05-2006	Данія, Португалія
дд/ММ/рррр	04/05/2006	Велика Британія, В'єтнам, Ізраїль, Індонезія, Іспанія, Італія, Франція
М/д/рррр	5/4/2006	США


Приклад алгоритму:

patterns = {
    pattern1: ['r"(\d{4})-(\d{1,2})-(\d{1,2})"', "PL", "SW", "LT", "CA", "KNR"],
    pattern2: ['r"(\d{4})\.\s(\d{1,2})\.\s(\d{1,2})"', "UG"],
}


get_date(date_string, country)
    try: 
        for pattern in patterns:
            if country in pattern:
                pattern = re.compile(pattern[0])

            else raise MyError("Incorrect country")
            if date_string           <---- check with regEX (if it cosists any simbols like (a-z, A-Z, \, | )) 
            else raise MyError("Incorrect date string")
        r"(\d{4})-(\d{1,2})-(\d{1,2})"
        finditer()

        return (YYYY, MM, DD)
    except :
        print(e)

